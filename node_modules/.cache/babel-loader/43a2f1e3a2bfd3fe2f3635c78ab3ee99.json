{"ast":null,"code":"const todos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO ':\n      return [{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }, ...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/home/comp/git_javascript/redux-to-do-list/src/store/reducers/todos.js"],"names":["todos","state","action","type","id","text","completed"],"mappings":"AACA,MAAMA,KAAK,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO,CACH;AACIC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADf;AAEIC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFjB;AAGIC,QAAAA,SAAS,EAAE;AAHf,OADG,EAMH,GAAGL,KANA,CAAP;;AASJ;AACI,aAAOA,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,KAAf","sourcesContent":["\nconst todos = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TODO ':\n            return [\n                {\n                    id: action.id,\n                    text: action.text,\n                    completed: false\n                },\n                ...state,\n               \n            ];\n        default:\n            return state\n    }\n}\n\nexport default todos"]},"metadata":{},"sourceType":"module"}