{"ast":null,"code":"const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/comp/git_javascript/redux-to-do-list/src/store/reducers/reduser.js"],"names":["reducer","state","action","type","id","text","completed"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAyB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,CACH,GAAGF,KADA,EAEH;AACIG,QAAAA,EAAE,EAACF,MAAM,CAACE,EADd;AAEIC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFjB;AAGIC,QAAAA,SAAS,EAAE;AAHf,OAFG,CAAP;;AAQA;AAAS,aAAOL,KAAP;AAVjB;AAYH,CAbD","sourcesContent":["const reducer = ( state = [], action) => { \n    switch (action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state,\n                {\n                    id:action.id,\n                    text: action.text,\n                    completed: false\n                }\n            ]\n            default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}